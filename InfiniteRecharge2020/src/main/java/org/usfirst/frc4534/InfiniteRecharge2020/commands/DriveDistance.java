// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4534.InfiniteRecharge2020.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc4534.InfiniteRecharge2020.Robot;
import java.math.*;

public class DriveDistance extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
    double targetT;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public DriveDistance(double target) {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        targetT = target;
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
        Robot.driveTrain.ZeroEncoders();
        Robot.driveTrain.AllowDrive(false);
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
        if ((Robot.driveTrain.GetRightEncoders() + Robot.driveTrain.GetLeftEncoders()) / 2 < targetT - 15) Robot.driveTrain.TankDrive(0.9, 0.9);
        else if ((Robot.driveTrain.GetRightEncoders() + Robot.driveTrain.GetLeftEncoders()) / 2 < targetT - 5) Robot.driveTrain.TankDrive(0.4, 0.4);
        else Robot.driveTrain.TankDrive(0.3, 0.3);
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return ((Robot.driveTrain.GetRightEncoders() + Robot.driveTrain.GetLeftEncoders()) / 2 >= targetT);
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
        Robot.driveTrain.TankDrive(0,0);
        Robot.driveTrain.AllowDrive(true);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
        Robot.driveTrain.TankDrive(0,0);
        Robot.driveTrain.AllowDrive(true);
    }
}